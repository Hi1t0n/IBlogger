[00:33:01 IN] Now listening on: http://localhost:5160 { EventId: { Id: 14, Name: "ListeningOnAddress" }, SourceContext: "Microsoft.Hosting.Lifetime" }
[00:33:01 IN] Application started. Press Ctrl+C to shut down. { SourceContext: "Microsoft.Hosting.Lifetime" }
[00:33:01 IN] Hosting environment: Development { SourceContext: "Microsoft.Hosting.Lifetime" }
[00:33:01 IN] Content root path: C:\Code\NewsPortal\Backend\UserService\UserService.Host { SourceContext: "Microsoft.Hosting.Lifetime" }
[00:33:01 IN] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId"; { EventId: { Id: 20101, Name: "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" }, SourceContext: "Microsoft.EntityFrameworkCore.Database.Command" }
[00:33:01 IN] Request starting HTTP/1.1 GET http://localhost:5160/index.html - null null { EventId: { Id: 1 }, SourceContext: "Microsoft.AspNetCore.Hosting.Diagnostics", RequestId: "0HN9V38MJK2U0:00000001", RequestPath: "/index.html", ConnectionId: "0HN9V38MJK2U0" }
[00:33:02 IN] Request finished HTTP/1.1 GET http://localhost:5160/index.html - 200 null text/html;charset=utf-8 203.7339ms { EventId: { Id: 2 }, SourceContext: "Microsoft.AspNetCore.Hosting.Diagnostics", RequestId: "0HN9V38MJK2U0:00000001", RequestPath: "/index.html", ConnectionId: "0HN9V38MJK2U0" }
[00:33:02 IN] Request starting HTTP/1.1 GET http://localhost:5160/index.js - null null { EventId: { Id: 1 }, SourceContext: "Microsoft.AspNetCore.Hosting.Diagnostics", RequestId: "0HN9V38MJK2U0:00000002", RequestPath: "/index.js", ConnectionId: "0HN9V38MJK2U0" }
[00:33:02 IN] Request finished HTTP/1.1 GET http://localhost:5160/index.js - 200 null application/javascript;charset=utf-8 2.9699ms { EventId: { Id: 2 }, SourceContext: "Microsoft.AspNetCore.Hosting.Diagnostics", RequestId: "0HN9V38MJK2U0:00000002", RequestPath: "/index.js", ConnectionId: "0HN9V38MJK2U0" }
[00:33:02 IN] Request starting HTTP/1.1 GET http://localhost:5160/swagger/v1/swagger.json - null null { EventId: { Id: 1 }, SourceContext: "Microsoft.AspNetCore.Hosting.Diagnostics", RequestId: "0HN9V38MJK2U0:00000003", RequestPath: "/swagger/v1/swagger.json", ConnectionId: "0HN9V38MJK2U0" }
[00:33:02 IN] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts { EventId: { Id: 1, Name: "NoActionDescriptors" }, SourceContext: "Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider", RequestId: "0HN9V38MJK2U0:00000003", RequestPath: "/swagger/v1/swagger.json", ConnectionId: "0HN9V38MJK2U0" }
[00:33:02 IN] Request finished HTTP/1.1 GET http://localhost:5160/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 101.9467ms { EventId: { Id: 2 }, SourceContext: "Microsoft.AspNetCore.Hosting.Diagnostics", RequestId: "0HN9V38MJK2U0:00000003", RequestPath: "/swagger/v1/swagger.json", ConnectionId: "0HN9V38MJK2U0" }
[00:33:09 IN] Request starting HTTP/1.1 GET http://localhost:5160/api/users - null null { EventId: { Id: 1 }, SourceContext: "Microsoft.AspNetCore.Hosting.Diagnostics", RequestId: "0HN9V38MJK2U0:00000004", RequestPath: "/api/users", ConnectionId: "0HN9V38MJK2U0" }
[00:33:09 IN] Executing endpoint 'HTTP: GET /api/users/ => GetUsersAsync' { EventId: { Name: "ExecutingEndpoint" }, SourceContext: "Microsoft.AspNetCore.Routing.EndpointMiddleware", RequestId: "0HN9V38MJK2U0:00000004", RequestPath: "/api/users", ConnectionId: "0HN9V38MJK2U0" }
[00:33:23 IN] Executed endpoint 'HTTP: GET /api/users/ => GetUsersAsync' { EventId: { Id: 1, Name: "ExecutedEndpoint" }, SourceContext: "Microsoft.AspNetCore.Routing.EndpointMiddleware", RequestId: "0HN9V38MJK2U0:00000004", RequestPath: "/api/users", ConnectionId: "0HN9V38MJK2U0" }
[00:33:23 ER] Exception: Servet Internal Error - The message timed out in the backlog attempting to send because no connection became available (5000ms) - Last Connection Exception: It was not possible to connect to the redis server(s). ConnectTimeout, command=HMGET, timeout: 5000, inst: 0, qu: 0, qs: 0, aw: False, bw: CheckingForTimeout, rs: NotStarted, ws: Idle, in: 0, last-in: 0, cur-in: 0, sync-ops: 0, async-ops: 1, serverEndpoint: localhost:6379, conn-sec: n/a, aoc: 0, mc: 1/1/0, mgr: 10 of 10 available, clientName: HILTON(SE.Redis-v2.7.27.49176), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=1,Free=32766,Min=12,Max=32767), POOL: (Threads=6,QueuedItems=0,CompletedItems=137,Timers=4), v: 2.7.27.49176 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts) - 500 {  }
[00:33:23 ER] HTTP GET /api/users responded 500 in 14337.0923 ms { SourceContext: "Serilog.AspNetCore.RequestLoggingMiddleware" }
[00:33:23 IN] Request finished HTTP/1.1 GET http://localhost:5160/api/users - 500 null application/json; charset=utf-8 14353.0008ms { EventId: { Id: 2 }, SourceContext: "Microsoft.AspNetCore.Hosting.Diagnostics", RequestId: "0HN9V38MJK2U0:00000004", RequestPath: "/api/users", ConnectionId: "0HN9V38MJK2U0" }
[00:34:55 IN] Application is shutting down... { SourceContext: "Microsoft.Hosting.Lifetime" }
